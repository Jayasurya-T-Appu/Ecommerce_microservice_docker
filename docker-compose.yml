
services:
  user-service:
    build: ./user-service
    container_name: user-service
    volumes:
      - ./user-service:/usr/src/app
      - /usr/src/app/node_modules
    environment:
      MONGO_URI: "mongodb://user-db:27017/users"
      REDIS_HOST: "user-redis"
      REDIS_PORT: "6379"
      JWT_SECRET: "ecommerce_backend"
      PORT: 3002
    depends_on:
      - user-db
      - user-redis
    networks:
      - backend

  user-db:
    image: mongo
    container_name: user-db
    volumes:
      - user-data:/data/db
    networks:
      - backend

  user-redis:
    image: redis:latest
    container_name: user-redis
    networks:
      - backend
    volumes:
      - redis-user-data:/data
  
  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - user-service
    networks:
      - backend
  product-service:
    build: './product-service'
    container_name: product-service
    volumes:
      - ./product-service:/usr/src/app
      - /usr/src/app/node_modules
    environment:
      MONGO_URI: "mongodb://product-db:27017/products"
      REDIS_HOST: "product-redis"
      REDIS_PORT: "6379"
      JWT_SECRET: "ecommerce_backend"
      PORT: 3002
    depends_on:
      - product-db
      - product-redis
    networks:
      - backend
  product-db:
    image: mongo
    container_name: product-db
    volumes:
      - product-data:/data/db
    networks:
      - backend
  product-redis:
    image: redis:latest
    container_name: product-redis
    ports:
      - "6379:6379"
    networks:
      - backend
    volumes:
      - redis-product-data:/data
  order-service:
      build: ./order-service
      container_name: order-service
      volumes:
        - ./order-service:/usr/src/app
        - /usr/src/app/node_modules
      environment:
        MONGO_URI: "mongodb://user-db:27017/orders"
        REDIS_HOST: "order-redis"
        REDIS_PORT: "6379"
        JWT_SECRET: "ecommerce_backend"
        PORT: 3002
      depends_on:
        - order-db
        - product-service
      networks:
        - backend
  order-db:
    image: mongo
    container_name: order-db
    volumes:
      - order-data:/data/db
    networks:
      - backend
networks:
  backend:

volumes:
  user-data:
  redis-user-data:
  product-data:
  redis-product-data:
  order-data:
